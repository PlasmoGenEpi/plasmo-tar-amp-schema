type GenomeInfo
  {
    name: String!
    version: String!
    taxonId: Integer!
    url: String!
    gffUrl: String
  }

type GenomicLocation
  {
    chrom: String!
    start: Integer!
    end: Integer!
    strand: String
  }

type HaplotypeInfo
  {
    haplotypeId: String!
    targetId: String!
  }

type HaplotypesDetected
  {
    sequencingId: String!
    bioinformaticsId: String!
  }

type HaplotypesForTarget
  {
    targetId: String!
  }

type PanelInfo
  {
    panelId: String!
    targets: [TargetInfo]!
  }

type PrimerInfo
  {
    seq: String!
    location: GenomicLocation!
  }

type Primers
  {
    entries: [PrimerInfo]
  }

type RepresentativeHaplotypeSequence
  {
    haplotypeId: String!
    seq: String!
    quality: String
  }

type TargetInfo
  {
    targetId: String!
    geneId: String
    targetGenome: GenomeInfo!
    insertLocation: GenomicLocation!
    forwardPrimers: Primers!
    reversePrimers: Primers!
  }

