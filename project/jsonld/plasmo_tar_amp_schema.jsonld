{
  "name": "plasmo-tar-amp-schema",
  "description": "Schema for defining the results to a targeted amplicon analysis performed on plasmodium ",
  "title": "plasmo-tar-amp-schema",
  "see_also": [
    "https://PlasmoGenEpi.github.io/plasmo-tar-amp-schema"
  ],
  "id": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
  "imports": [
    "linkml:types"
  ],
  "license": "GNU GPL v3.0",
  "prefixes": [
    {
      "prefix_prefix": "plasmo_tar_amp_schema",
      "prefix_reference": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/"
    },
    {
      "prefix_prefix": "linkml",
      "prefix_reference": "https://w3id.org/linkml/"
    },
    {
      "prefix_prefix": "biolink",
      "prefix_reference": "https://w3id.org/biolink/"
    },
    {
      "prefix_prefix": "schema",
      "prefix_reference": "http://schema.org/"
    },
    {
      "prefix_prefix": "PATO",
      "prefix_reference": "http://purl.obolibrary.org/obo/PATO_"
    },
    {
      "prefix_prefix": "example",
      "prefix_reference": "https://example.org/"
    }
  ],
  "default_prefix": "plasmo_tar_amp_schema",
  "default_range": "string",
  "types": [
    {
      "name": "string",
      "definition_uri": "https://w3id.org/linkml/String",
      "description": "A character string",
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "exact_mappings": [
        "schema:Text"
      ],
      "base": "str",
      "uri": "http://www.w3.org/2001/XMLSchema#string",
      "@type": "TypeDefinition"
    },
    {
      "name": "integer",
      "definition_uri": "https://w3id.org/linkml/Integer",
      "description": "An integer",
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "exact_mappings": [
        "schema:Integer"
      ],
      "base": "int",
      "uri": "http://www.w3.org/2001/XMLSchema#integer",
      "@type": "TypeDefinition"
    },
    {
      "name": "boolean",
      "definition_uri": "https://w3id.org/linkml/Boolean",
      "description": "A binary (true or false) value",
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "exact_mappings": [
        "schema:Boolean"
      ],
      "base": "Bool",
      "uri": "http://www.w3.org/2001/XMLSchema#boolean",
      "repr": "bool",
      "@type": "TypeDefinition"
    },
    {
      "name": "float",
      "definition_uri": "https://w3id.org/linkml/Float",
      "description": "A real number that conforms to the xsd:float specification",
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "exact_mappings": [
        "schema:Float"
      ],
      "base": "float",
      "uri": "http://www.w3.org/2001/XMLSchema#float",
      "@type": "TypeDefinition"
    },
    {
      "name": "double",
      "definition_uri": "https://w3id.org/linkml/Double",
      "description": "A real number that conforms to the xsd:double specification",
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "close_mappings": [
        "schema:Float"
      ],
      "base": "float",
      "uri": "http://www.w3.org/2001/XMLSchema#double",
      "@type": "TypeDefinition"
    },
    {
      "name": "decimal",
      "definition_uri": "https://w3id.org/linkml/Decimal",
      "description": "A real number with arbitrary precision that conforms to the xsd:decimal specification",
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "broad_mappings": [
        "schema:Number"
      ],
      "base": "Decimal",
      "uri": "http://www.w3.org/2001/XMLSchema#decimal",
      "@type": "TypeDefinition"
    },
    {
      "name": "time",
      "definition_uri": "https://w3id.org/linkml/Time",
      "description": "A time object represents a (local) time of day, independent of any particular day",
      "notes": [
        "URI is dateTime because OWL reasoners do not work with straight date or time"
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "exact_mappings": [
        "schema:Time"
      ],
      "base": "XSDTime",
      "uri": "http://www.w3.org/2001/XMLSchema#time",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "date",
      "definition_uri": "https://w3id.org/linkml/Date",
      "description": "a date (year, month and day) in an idealized calendar",
      "notes": [
        "URI is dateTime because OWL reasoners don't work with straight date or time"
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "exact_mappings": [
        "schema:Date"
      ],
      "base": "XSDDate",
      "uri": "http://www.w3.org/2001/XMLSchema#date",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "datetime",
      "definition_uri": "https://w3id.org/linkml/Datetime",
      "description": "The combination of a date and time",
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "exact_mappings": [
        "schema:DateTime"
      ],
      "base": "XSDDateTime",
      "uri": "http://www.w3.org/2001/XMLSchema#dateTime",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "date_or_datetime",
      "definition_uri": "https://w3id.org/linkml/DateOrDatetime",
      "description": "Either a date or a datetime",
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "str",
      "uri": "https://w3id.org/linkml/DateOrDatetime",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "uriorcurie",
      "definition_uri": "https://w3id.org/linkml/Uriorcurie",
      "description": "a URI or a CURIE",
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "URIorCURIE",
      "uri": "http://www.w3.org/2001/XMLSchema#anyURI",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "curie",
      "definition_uri": "https://w3id.org/linkml/Curie",
      "conforms_to": "https://www.w3.org/TR/curie/",
      "description": "a compact URI",
      "comments": [
        "in RDF serializations this MUST be expanded to a URI",
        "in non-RDF serializations MAY be serialized as the compact representation"
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "Curie",
      "uri": "http://www.w3.org/2001/XMLSchema#string",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "uri",
      "definition_uri": "https://w3id.org/linkml/Uri",
      "conforms_to": "https://www.ietf.org/rfc/rfc3987.txt",
      "description": "a complete URI",
      "comments": [
        "in RDF serializations a slot with range of uri is treated as a literal or type xsd:anyURI unless it is an identifier or a reference to an identifier, in which case it is translated directly to a node"
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "close_mappings": [
        "schema:URL"
      ],
      "base": "URI",
      "uri": "http://www.w3.org/2001/XMLSchema#anyURI",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "ncname",
      "definition_uri": "https://w3id.org/linkml/Ncname",
      "description": "Prefix part of CURIE",
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "NCName",
      "uri": "http://www.w3.org/2001/XMLSchema#string",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "objectidentifier",
      "definition_uri": "https://w3id.org/linkml/Objectidentifier",
      "description": "A URI or CURIE that represents an object in the model.",
      "comments": [
        "Used for inheritance and type checking"
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "ElementIdentifier",
      "uri": "http://www.w3.org/ns/shex#iri",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "nodeidentifier",
      "definition_uri": "https://w3id.org/linkml/Nodeidentifier",
      "description": "A URI, CURIE or BNODE that represents a node in a model.",
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "NodeIdentifier",
      "uri": "http://www.w3.org/ns/shex#nonLiteral",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "jsonpointer",
      "definition_uri": "https://w3id.org/linkml/Jsonpointer",
      "conforms_to": "https://datatracker.ietf.org/doc/html/rfc6901",
      "description": "A string encoding a JSON Pointer. The value of the string MUST conform to JSON Point syntax and SHOULD dereference to a valid object within the current instance document when encoded in tree form.",
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "str",
      "uri": "http://www.w3.org/2001/XMLSchema#string",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "jsonpath",
      "definition_uri": "https://w3id.org/linkml/Jsonpath",
      "conforms_to": "https://www.ietf.org/archive/id/draft-goessner-dispatch-jsonpath-00.html",
      "description": "A string encoding a JSON Path. The value of the string MUST conform to JSON Point syntax and SHOULD dereference to zero or more valid objects within the current instance document when encoded in tree form.",
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "str",
      "uri": "http://www.w3.org/2001/XMLSchema#string",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "sparqlpath",
      "definition_uri": "https://w3id.org/linkml/Sparqlpath",
      "conforms_to": "https://www.w3.org/TR/sparql11-query/#propertypaths",
      "description": "A string encoding a SPARQL Property Path. The value of the string MUST conform to SPARQL syntax and SHOULD dereference to zero or more valid objects within the current instance document when encoded as RDF.",
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "str",
      "uri": "http://www.w3.org/2001/XMLSchema#string",
      "repr": "str",
      "@type": "TypeDefinition"
    }
  ],
  "slots": [
    {
      "name": "targetInfo__target_id",
      "description": "a unique identifier for target ",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/target_id",
      "alias": "target_id",
      "owner": "TargetInfo",
      "domain_of": [
        "TargetInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "targetInfo__gene_id",
      "description": "an identifier of the gene, if any, is being covered with this targeted",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/gene_id",
      "alias": "gene_id",
      "owner": "TargetInfo",
      "domain_of": [
        "TargetInfo"
      ],
      "range": "string",
      "pattern": "^[A-z-._0-9]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "targetInfo__target_genome",
      "description": "the info on the target genome for this target",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/target_genome",
      "alias": "target_genome",
      "owner": "TargetInfo",
      "domain_of": [
        "TargetInfo"
      ],
      "range": "GenomeInfo",
      "required": true,
      "inlined": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "targetInfo__insert_location",
      "description": "the intended genomic location of the insert of the amplicon (the location between the end of the forward primer and the beginning of the reverse primer)",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/insert_location",
      "alias": "insert_location",
      "owner": "TargetInfo",
      "domain_of": [
        "TargetInfo"
      ],
      "range": "GenomicLocation",
      "required": true,
      "inlined": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "targetInfo__forward_primers",
      "description": "A holder of forward primers associated with this target",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/forward_primers",
      "alias": "forward_primers",
      "owner": "TargetInfo",
      "domain_of": [
        "TargetInfo"
      ],
      "range": "Primers",
      "required": true,
      "inlined": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "targetInfo__reverse_primers",
      "description": "A holder of reverse primers associated with this target",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/reverse_primers",
      "alias": "reverse_primers",
      "owner": "TargetInfo",
      "domain_of": [
        "TargetInfo"
      ],
      "range": "Primers",
      "required": true,
      "inlined": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "panelInfo__panel_id",
      "description": "name of the panel",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/panel_id",
      "alias": "panel_id",
      "owner": "PanelInfo",
      "domain_of": [
        "PanelInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "panelInfo__targets",
      "description": "a list of the target infos for the targets in this panel ",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/targets",
      "multivalued": true,
      "alias": "targets",
      "owner": "PanelInfo",
      "domain_of": [
        "PanelInfo"
      ],
      "range": "TargetInfo",
      "required": true,
      "inlined": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "representativeHaplotypeSequence__haplotype_id",
      "description": "name of the haplotype, should be unique to this haplotype",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/haplotype_id",
      "alias": "haplotype_id",
      "owner": "RepresentativeHaplotypeSequence",
      "domain_of": [
        "RepresentativeHaplotypeSequence"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "representativeHaplotypeSequence__seq",
      "description": "the sequence of haplotype",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/seq",
      "alias": "seq",
      "owner": "RepresentativeHaplotypeSequence",
      "domain_of": [
        "RepresentativeHaplotypeSequence"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "representativeHaplotypeSequence__quality",
      "description": "the ansi fastq per base quality score for this sequence, this is optional",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/quality",
      "alias": "quality",
      "owner": "RepresentativeHaplotypeSequence",
      "domain_of": [
        "RepresentativeHaplotypeSequence"
      ],
      "range": "string",
      "pattern": "^[A-z-._0-9]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "representativeHaplotypeSequence__alt_annotations",
      "description": "a list of additional annotations associated with this haplotype, e.g. wildtype, amino acid changes etc",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/alt_annotations",
      "multivalued": true,
      "alias": "alt_annotations",
      "owner": "RepresentativeHaplotypeSequence",
      "domain_of": [
        "RepresentativeHaplotypeSequence"
      ],
      "range": "string",
      "inlined_as_list": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "representativeHaplotypeSequences__target_id",
      "description": "name of the target for the sequences",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/target_id",
      "alias": "target_id",
      "owner": "RepresentativeHaplotypeSequences",
      "domain_of": [
        "RepresentativeHaplotypeSequences"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "representativeHaplotypeSequences__seqs",
      "description": "a list of the haplotypes detected for a sample for various targets ",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/seqs",
      "multivalued": true,
      "alias": "seqs",
      "owner": "RepresentativeHaplotypeSequences",
      "domain_of": [
        "RepresentativeHaplotypeSequences"
      ],
      "range": "RepresentativeHaplotypeSequence",
      "required": true,
      "inlined": true,
      "inlined_as_list": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "haplotypesDetected__sequencing_id",
      "description": "the name of the sequencing/wet lab processing steps associated with this run",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/sequencing_id",
      "alias": "sequencing_id",
      "owner": "HaplotypesDetected",
      "domain_of": [
        "HaplotypesDetected"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "haplotypesDetected__bioinformatics_id",
      "description": "the name of the bioinformatics processing steps associated with this run",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/bioinformatics_id",
      "alias": "bioinformatics_id",
      "owner": "HaplotypesDetected",
      "domain_of": [
        "HaplotypesDetected"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "haplotypesDetected__samples",
      "description": "a list of the haplotypes detected for a sample for various targets ",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/samples",
      "multivalued": true,
      "alias": "samples",
      "owner": "HaplotypesDetected",
      "domain_of": [
        "HaplotypesDetected"
      ],
      "range": "HaplotypesForSample",
      "required": true,
      "inlined": true,
      "inlined_as_list": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "genomeInfo__name",
      "description": "name of the genome",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/name",
      "alias": "name",
      "owner": "GenomeInfo",
      "domain_of": [
        "GenomeInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "genomeInfo__version",
      "description": "the genome version",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/version",
      "alias": "version",
      "owner": "GenomeInfo",
      "domain_of": [
        "GenomeInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "genomeInfo__taxon_id",
      "description": "the NCBI taxonomy number",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/taxon_id",
      "alias": "taxon_id",
      "owner": "GenomeInfo",
      "domain_of": [
        "GenomeInfo"
      ],
      "range": "integer",
      "required": true,
      "pattern": "^[0-9]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "genomeInfo__url",
      "description": "a link to the where this genome file could be downloaded",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/url",
      "alias": "url",
      "owner": "GenomeInfo",
      "domain_of": [
        "GenomeInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "r\"^(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*$\"",
      "@type": "SlotDefinition"
    },
    {
      "name": "genomeInfo__gff_url",
      "description": "a link to the where this genome's annotation file could be downloaded",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/gff_url",
      "alias": "gff_url",
      "owner": "GenomeInfo",
      "domain_of": [
        "GenomeInfo"
      ],
      "range": "string",
      "pattern": "r\"^(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*$\"",
      "@type": "SlotDefinition"
    },
    {
      "name": "genomicLocation__chrom",
      "description": "the chromosome name",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/chrom",
      "alias": "chrom",
      "owner": "GenomicLocation",
      "domain_of": [
        "GenomicLocation"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "genomicLocation__start",
      "description": "the start of the location, 0-based positioning",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/start",
      "alias": "start",
      "owner": "GenomicLocation",
      "domain_of": [
        "GenomicLocation"
      ],
      "range": "integer",
      "required": true,
      "pattern": "^[0-9]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "genomicLocation__end",
      "description": "the end of the location, 0-based positioning",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/end",
      "alias": "end",
      "owner": "GenomicLocation",
      "domain_of": [
        "GenomicLocation"
      ],
      "range": "integer",
      "required": true,
      "pattern": "^[0-9]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "genomicLocation__strand",
      "description": "which strand the location is, either + for plus strand or - for negative strand ",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/strand",
      "alias": "strand",
      "owner": "GenomicLocation",
      "domain_of": [
        "GenomicLocation"
      ],
      "range": "string",
      "pattern": "r'[+-]'",
      "@type": "SlotDefinition"
    },
    {
      "name": "primerInfo__seq",
      "description": "the primer sequence, can include any degeneracy bases as well",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/seq",
      "alias": "seq",
      "owner": "PrimerInfo",
      "domain_of": [
        "PrimerInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "primerInfo__location",
      "description": "what the intended genomic location of the primer is  \n  ",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/location",
      "alias": "location",
      "owner": "PrimerInfo",
      "domain_of": [
        "PrimerInfo"
      ],
      "range": "GenomicLocation",
      "required": true,
      "inlined": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "primers__entries",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/entries",
      "multivalued": true,
      "alias": "entries",
      "owner": "Primers",
      "domain_of": [
        "Primers"
      ],
      "range": "PrimerInfo",
      "inlined": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "haplotypesForSample__sample_id",
      "description": "the name of the sample",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/sample_id",
      "alias": "sample_id",
      "owner": "HaplotypesForSample",
      "domain_of": [
        "HaplotypesForSample"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "haplotypesForSample__target_results",
      "description": "a list of the haplotypes detected for a list of targets",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/target_results",
      "multivalued": true,
      "alias": "target_results",
      "owner": "HaplotypesForSample",
      "domain_of": [
        "HaplotypesForSample"
      ],
      "range": "HaplotypesForTarget",
      "required": true,
      "inlined": true,
      "inlined_as_list": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "haplotypesForTarget__target_id",
      "description": "the target associated with this target and these detected haplotypes",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/target_id",
      "alias": "target_id",
      "owner": "HaplotypesForTarget",
      "domain_of": [
        "HaplotypesForTarget"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "haplotypesForTarget__haplotype_ids",
      "description": "a list of the haplotypes detected for this target",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/haplotype_ids",
      "multivalued": true,
      "alias": "haplotype_ids",
      "owner": "HaplotypesForTarget",
      "domain_of": [
        "HaplotypesForTarget"
      ],
      "range": "string",
      "required": true,
      "inlined_as_list": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "haplotypesForTarget__read_counts",
      "description": "the read counts associated with the haplotypes, needs to be same length as haplotype_ids",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/read_counts",
      "multivalued": true,
      "alias": "read_counts",
      "owner": "HaplotypesForTarget",
      "domain_of": [
        "HaplotypesForTarget"
      ],
      "range": "double",
      "required": true,
      "inlined_as_list": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "haplotypesForTarget__umi_counts",
      "description": "the unique molecular identifier (umi) counts associated with the haplotypes, needs to be same length as haplotype_ids",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/umi_counts",
      "multivalued": true,
      "alias": "umi_counts",
      "owner": "HaplotypesForTarget",
      "domain_of": [
        "HaplotypesForTarget"
      ],
      "range": "double",
      "inlined_as_list": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "bioMethod__program",
      "description": "name of the program used for this portion of the pipeline",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/program",
      "alias": "program",
      "owner": "BioMethod",
      "domain_of": [
        "BioMethod"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9 ]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "bioMethod__purpose",
      "description": "the propose for this method",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/purpose",
      "alias": "purpose",
      "owner": "BioMethod",
      "domain_of": [
        "BioMethod"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9 ]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "bioMethod__additional_argument",
      "description": "any additional arguments that differ from the default",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/additional_argument",
      "multivalued": true,
      "alias": "additional_argument",
      "owner": "BioMethod",
      "domain_of": [
        "BioMethod"
      ],
      "range": "string",
      "inlined_as_list": true,
      "pattern": "^[A-z-._0-9 ]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "tarAmpBioinformaticsInfo__tar_amp_bioinformatics_info_id",
      "description": "a unique identifier for this bioinformatics info",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/tar_amp_bioinformatics_info_id",
      "alias": "tar_amp_bioinformatics_info_id",
      "owner": "TarAmpBioinformaticsInfo",
      "domain_of": [
        "TarAmpBioinformaticsInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9 ]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "tarAmpBioinformaticsInfo__demultiplexing_method",
      "description": "the demultiplexing method used to separate raw reads from barcodes and primer targets",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/demultiplexing_method",
      "alias": "demultiplexing_method",
      "owner": "TarAmpBioinformaticsInfo",
      "domain_of": [
        "TarAmpBioinformaticsInfo"
      ],
      "range": "BioMethod",
      "required": true,
      "inlined": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "tarAmpBioinformaticsInfo__denoising_method",
      "description": "the method used to de-noise and/or cluster the raw reads",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/denoising_method",
      "alias": "denoising_method",
      "owner": "TarAmpBioinformaticsInfo",
      "domain_of": [
        "TarAmpBioinformaticsInfo"
      ],
      "range": "BioMethod",
      "required": true,
      "inlined": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "tarAmpBioinformaticsInfo__population_clustering_method",
      "description": "the method used to compare clustered/de-noised reads across samples for a target",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/population_clustering_method",
      "alias": "population_clustering_method",
      "owner": "TarAmpBioinformaticsInfo",
      "domain_of": [
        "TarAmpBioinformaticsInfo"
      ],
      "range": "BioMethod",
      "required": true,
      "inlined": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "tarAmpBioinformaticsInfo__additional_methods",
      "description": "any additional methods used to analyze the data",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/additional_methods",
      "multivalued": true,
      "alias": "additional_methods",
      "owner": "TarAmpBioinformaticsInfo",
      "domain_of": [
        "TarAmpBioinformaticsInfo"
      ],
      "range": "BioMethod",
      "inlined": true,
      "inlined_as_list": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "sequencingInfo__sequencing_info_id",
      "description": "a unique identifier for this sequencing info",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/sequencing_info_id",
      "alias": "sequencing_info_id",
      "owner": "SequencingInfo",
      "domain_of": [
        "SequencingInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9 ]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "sequencingInfo__seq_instrument",
      "description": "the sequencing instrument used to sequence the run, e.g. ILLUMINA, Illumina MiSeq",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/seq_instrument",
      "alias": "seq_instrument",
      "owner": "SequencingInfo",
      "domain_of": [
        "SequencingInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9 ]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "sequencingInfo__seq_date",
      "description": "the date of sequencing, should be YYYY-MM or YYYY-MM-DD",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/seq_date",
      "alias": "seq_date",
      "owner": "SequencingInfo",
      "domain_of": [
        "SequencingInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "r\"\\d{4}-(?:0[1-9]|1[0-2])(?:-(?:0[1-9]|[12][0-9]|3[01]))?\"",
      "@type": "SlotDefinition"
    },
    {
      "name": "sequencingInfo__nucl_acid_ext",
      "description": "Link to a reference or kit that describes the recovery of nucleic acids from the sample",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/nucl_acid_ext",
      "alias": "nucl_acid_ext",
      "owner": "SequencingInfo",
      "domain_of": [
        "SequencingInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "r\"^(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*$\"",
      "@type": "SlotDefinition"
    },
    {
      "name": "sequencingInfo__nucl_acid_amp",
      "description": "Link to a reference or kit that describes the enzymatic amplification of nucleic acids,",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/nucl_acid_amp",
      "alias": "nucl_acid_amp",
      "owner": "SequencingInfo",
      "domain_of": [
        "SequencingInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "r\"^(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*$\"",
      "@type": "SlotDefinition"
    },
    {
      "name": "sequencingInfo__nucl_acid_date",
      "description": "the date of the extraction/amplification",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/nucl_acid_date",
      "alias": "nucl_acid_date",
      "owner": "SequencingInfo",
      "domain_of": [
        "SequencingInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "r\"\\d{4}-(?:0[1-9]|1[0-2])(?:-(?:0[1-9]|[12][0-9]|3[01]))?\"",
      "@type": "SlotDefinition"
    },
    {
      "name": "sequencingInfo__pcr_cond",
      "description": "the method/conditions for PCR, List PCR cycles used to amplify the target",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/pcr_cond",
      "alias": "pcr_cond",
      "owner": "SequencingInfo",
      "domain_of": [
        "SequencingInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9 ]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "sequencingInfo__lib_screen",
      "description": "Describe enrichment, screening, or normalization methods applied during amplification or library preparation, e.g. size selection 390bp, diluted to 1 ng DNA/sample",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/lib_screen",
      "alias": "lib_screen",
      "owner": "SequencingInfo",
      "domain_of": [
        "SequencingInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9 ]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "sequencingInfo__lib_layout",
      "description": "Specify the configuration of reads, e.g. paired-end",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/lib_layout",
      "alias": "lib_layout",
      "owner": "SequencingInfo",
      "domain_of": [
        "SequencingInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9 ]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "sequencingInfo__lib_kit",
      "description": "Name, version, and applicable cell or cycle numbers for the kit used to prepare libraries and load cells or chips for sequencing. If possible, include a part number, e.g. MiSeq Reagent Kit v3 (150-cycle), MS-102-3001",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/lib_kit",
      "alias": "lib_kit",
      "owner": "SequencingInfo",
      "domain_of": [
        "SequencingInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9 ]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "sequencingInfo__seq_center",
      "description": "Name of facility where sequencing was performed (lab, core facility, or company)",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/seq_center",
      "alias": "seq_center",
      "owner": "SequencingInfo",
      "domain_of": [
        "SequencingInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9 ]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__sample_name",
      "description": "Collector\u2019s project-specific sample name, which must be unique for each sample that you are submitting",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/sample_name",
      "alias": "sample_name",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9 ]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__samp_taxon_id",
      "description": "the NCBI taxonomy number of the organism of interest",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/samp_taxon_id",
      "alias": "samp_taxon_id",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "integer",
      "required": true,
      "pattern": "^[0-9]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__host_taxon_id",
      "description": "optional the NCBI taxonomy number of the host of the organism",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/host_taxon_id",
      "alias": "host_taxon_id",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "integer",
      "pattern": "^[0-9]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__alternate_identifiers",
      "description": "a list of optional alternative names for the samples",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/alternate_identifiers",
      "multivalued": true,
      "alias": "alternate_identifiers",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "string",
      "inlined_as_list": true,
      "pattern": "^[A-z-._0-9 ]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__parasite_density",
      "description": "the parasite density in microliters",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/parasite_density",
      "alias": "parasite_density",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "integer",
      "pattern": "r'^[-+]?\\d*\\.?\\d+(?:[eE][-+]?\\d+)?$'",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__collection_date",
      "description": "the date of the sample collection",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/collection_date",
      "alias": "collection_date",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "r\"\\d{4}-(?:0[1-9]|1[0-2])(?:-(?:0[1-9]|[12][0-9]|3[01]))?\"",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__lat_lon",
      "description": "the latitude and longitude of the collection site of the specimen",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/lat_lon",
      "alias": "lat_lon",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "r'^[-+]?\\d{1,2}(?:\\.\\d+)?,[-+]?\\d{1,3}(?:\\.\\d+)?$'",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__collector",
      "description": "the name of the primary person managing the specimen",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/collector",
      "alias": "collector",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9 ]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__samp_store_loc",
      "description": "the sample store site, address or facility name",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/samp_store_loc",
      "alias": "samp_store_loc",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9 ]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__samp_collect_device",
      "description": "the way the sample was collected, e.g. whole blood, dried blood spot, etc",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/samp_collect_device",
      "alias": "samp_collect_device",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9 ]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__project_name",
      "description": "a name of the project under which the sample is organized",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/project_name",
      "alias": "project_name",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9 ]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__accession",
      "description": "ERA/SRA accession number for the sample if it was submitted",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/accession",
      "alias": "accession",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "string",
      "pattern": "^[A-z-._0-9]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__sample_comments",
      "description": "any additional comments about the sample  ",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/sample_comments",
      "alias": "sample_comments",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "string",
      "pattern": "^[A-z-._0-9 ]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "plasmoTarAmpResults__specimen_infos",
      "description": "a list of SpecimenInfo of all the samples within this project",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/specimen_infos",
      "multivalued": true,
      "alias": "specimen_infos",
      "owner": "PlasmoTarAmpResults",
      "domain_of": [
        "PlasmoTarAmpResults"
      ],
      "range": "SpecimenInfo",
      "required": true,
      "inlined": true,
      "inlined_as_list": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "plasmoTarAmpResults__sequencing_info",
      "description": "the sequencing info for this project",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/sequencing_info",
      "alias": "sequencing_info",
      "owner": "PlasmoTarAmpResults",
      "domain_of": [
        "PlasmoTarAmpResults"
      ],
      "range": "SequencingInfo",
      "required": true,
      "inlined": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "plasmoTarAmpResults__bioinformatics_info",
      "description": "the bioinformatics pipeline info for this project",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/bioinformatics_info",
      "alias": "bioinformatics_info",
      "owner": "PlasmoTarAmpResults",
      "domain_of": [
        "PlasmoTarAmpResults"
      ],
      "range": "TarAmpBioinformaticsInfo",
      "required": true,
      "inlined": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "plasmoTarAmpResults__panel_info",
      "description": "the info on the panel used for this project",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/panel_info",
      "alias": "panel_info",
      "owner": "PlasmoTarAmpResults",
      "domain_of": [
        "PlasmoTarAmpResults"
      ],
      "range": "PanelInfo",
      "required": true,
      "inlined": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "plasmoTarAmpResults__representative_haplotype_sequences",
      "description": "a list of the representative sequences for the results for this project",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/representative_haplotype_sequences",
      "multivalued": true,
      "alias": "representative_haplotype_sequences",
      "owner": "PlasmoTarAmpResults",
      "domain_of": [
        "PlasmoTarAmpResults"
      ],
      "range": "RepresentativeHaplotypeSequences",
      "required": true,
      "inlined": true,
      "inlined_as_list": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "plasmoTarAmpResults__haplotypes_detected",
      "description": "the haplotypes detected in this projects ",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slot_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/haplotypes_detected",
      "alias": "haplotypes_detected",
      "owner": "PlasmoTarAmpResults",
      "domain_of": [
        "PlasmoTarAmpResults"
      ],
      "range": "HaplotypesDetected",
      "required": true,
      "inlined": true,
      "@type": "SlotDefinition"
    }
  ],
  "classes": [
    {
      "name": "TargetInfo",
      "definition_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/TargetInfo",
      "description": "Information about a specific target within a genome",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slots": [
        "targetInfo__target_id",
        "targetInfo__gene_id",
        "targetInfo__target_genome",
        "targetInfo__insert_location",
        "targetInfo__forward_primers",
        "targetInfo__reverse_primers"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "target_id",
          "description": "a unique identifier for target ",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "gene_id",
          "description": "an identifier of the gene, if any, is being covered with this targeted",
          "range": "string",
          "pattern": "^[A-z-._0-9]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "target_genome",
          "description": "the info on the target genome for this target",
          "range": "GenomeInfo",
          "required": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "insert_location",
          "description": "the intended genomic location of the insert of the amplicon (the location between the end of the forward primer and the beginning of the reverse primer)",
          "range": "GenomicLocation",
          "required": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "forward_primers",
          "description": "A holder of forward primers associated with this target",
          "range": "Primers",
          "required": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "reverse_primers",
          "description": "A holder of reverse primers associated with this target",
          "range": "Primers",
          "required": true,
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/TargetInfo",
      "@type": "ClassDefinition"
    },
    {
      "name": "PanelInfo",
      "definition_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/PanelInfo",
      "description": "information on a panel of targeted amplicon primer pairs",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slots": [
        "panelInfo__panel_id",
        "panelInfo__targets"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "panel_id",
          "description": "name of the panel",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "targets",
          "description": "a list of the target infos for the targets in this panel ",
          "multivalued": true,
          "range": "TargetInfo",
          "required": true,
          "inlined": true,
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/PanelInfo",
      "@type": "ClassDefinition"
    },
    {
      "name": "RepresentativeHaplotypeSequence",
      "definition_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/RepresentativeHaplotypeSequence",
      "description": "the representative sequence for a haplotype, similar to a fast(a/q) format",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slots": [
        "representativeHaplotypeSequence__haplotype_id",
        "representativeHaplotypeSequence__seq",
        "representativeHaplotypeSequence__quality",
        "representativeHaplotypeSequence__alt_annotations"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "haplotype_id",
          "description": "name of the haplotype, should be unique to this haplotype",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "seq",
          "description": "the sequence of haplotype",
          "range": "string",
          "required": true,
          "pattern": "^[A-z]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "quality",
          "description": "the ansi fastq per base quality score for this sequence, this is optional",
          "range": "string",
          "pattern": "^[A-z-._0-9]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "alt_annotations",
          "description": "a list of additional annotations associated with this haplotype, e.g. wildtype, amino acid changes etc",
          "multivalued": true,
          "range": "string",
          "inlined_as_list": true,
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/RepresentativeHaplotypeSequence",
      "@type": "ClassDefinition"
    },
    {
      "name": "RepresentativeHaplotypeSequences",
      "definition_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/RepresentativeHaplotypeSequences",
      "description": "a list of the representative sequence for a haplotypes, similar to a fast(a/q) format",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slots": [
        "representativeHaplotypeSequences__target_id",
        "representativeHaplotypeSequences__seqs"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "target_id",
          "description": "name of the target for the sequences",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "seqs",
          "description": "a list of the haplotypes detected for a sample for various targets ",
          "multivalued": true,
          "range": "RepresentativeHaplotypeSequence",
          "required": true,
          "inlined_as_list": true,
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/RepresentativeHaplotypeSequences",
      "@type": "ClassDefinition"
    },
    {
      "name": "HaplotypesDetected",
      "definition_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/HaplotypesDetected",
      "description": "the haplotypes detected in a targeted amplicon analysis",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slots": [
        "haplotypesDetected__sequencing_id",
        "haplotypesDetected__bioinformatics_id",
        "haplotypesDetected__samples"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "sequencing_id",
          "description": "the name of the sequencing/wet lab processing steps associated with this run",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "bioinformatics_id",
          "description": "the name of the bioinformatics processing steps associated with this run",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "samples",
          "description": "a list of the haplotypes detected for a sample for various targets ",
          "multivalued": true,
          "range": "HaplotypesForSample",
          "required": true,
          "inlined_as_list": true,
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/HaplotypesDetected",
      "@type": "ClassDefinition"
    },
    {
      "name": "GenomeInfo",
      "definition_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/GenomeInfo",
      "description": "information on a genome",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slots": [
        "genomeInfo__name",
        "genomeInfo__version",
        "genomeInfo__taxon_id",
        "genomeInfo__url",
        "genomeInfo__gff_url"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "name",
          "description": "name of the genome",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "version",
          "description": "the genome version",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "taxon_id",
          "description": "the NCBI taxonomy number",
          "range": "integer",
          "required": true,
          "pattern": "^[0-9]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "url",
          "description": "a link to the where this genome file could be downloaded",
          "range": "string",
          "required": true,
          "pattern": "r\"^(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*$\"",
          "@type": "SlotDefinition"
        },
        {
          "name": "gff_url",
          "description": "a link to the where this genome's annotation file could be downloaded",
          "range": "string",
          "pattern": "r\"^(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*$\"",
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/GenomeInfo",
      "@type": "ClassDefinition"
    },
    {
      "name": "GenomicLocation",
      "definition_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/GenomicLocation",
      "description": "information on the genomic location of specific sequence",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slots": [
        "genomicLocation__chrom",
        "genomicLocation__start",
        "genomicLocation__end",
        "genomicLocation__strand"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "chrom",
          "description": "the chromosome name",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "start",
          "description": "the start of the location, 0-based positioning",
          "range": "integer",
          "required": true,
          "pattern": "^[0-9]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "end",
          "description": "the end of the location, 0-based positioning",
          "range": "integer",
          "required": true,
          "pattern": "^[0-9]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "strand",
          "description": "which strand the location is, either + for plus strand or - for negative strand ",
          "range": "string",
          "pattern": "r'[+-]'",
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/GenomicLocation",
      "@type": "ClassDefinition"
    },
    {
      "name": "PrimerInfo",
      "definition_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/PrimerInfo",
      "description": "information on a primer sequence",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slots": [
        "primerInfo__seq",
        "primerInfo__location"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "seq",
          "description": "the primer sequence, can include any degeneracy bases as well",
          "range": "string",
          "required": true,
          "pattern": "^[A-z]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "location",
          "description": "what the intended genomic location of the primer is  \n  ",
          "range": "GenomicLocation",
          "required": true,
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/PrimerInfo",
      "@type": "ClassDefinition"
    },
    {
      "name": "Primers",
      "definition_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/Primers",
      "description": "A holder of primer sequences",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slots": [
        "primers__entries"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "entries",
          "multivalued": true,
          "range": "PrimerInfo",
          "inlined": true,
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/Primers",
      "tree_root": true,
      "@type": "ClassDefinition"
    },
    {
      "name": "HaplotypesForSample",
      "definition_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/HaplotypesForSample",
      "description": "Haplotypes detected for a sample for all targets",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slots": [
        "haplotypesForSample__sample_id",
        "haplotypesForSample__target_results"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "sample_id",
          "description": "the name of the sample",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "target_results",
          "description": "a list of the haplotypes detected for a list of targets",
          "multivalued": true,
          "range": "HaplotypesForTarget",
          "required": true,
          "inlined_as_list": true,
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/HaplotypesForSample",
      "@type": "ClassDefinition"
    },
    {
      "name": "HaplotypesForTarget",
      "definition_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/HaplotypesForTarget",
      "description": "Haplotypes detected for a specific target",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slots": [
        "haplotypesForTarget__target_id",
        "haplotypesForTarget__haplotype_ids",
        "haplotypesForTarget__read_counts",
        "haplotypesForTarget__umi_counts"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "target_id",
          "description": "the target associated with this target and these detected haplotypes",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "haplotype_ids",
          "description": "a list of the haplotypes detected for this target",
          "multivalued": true,
          "range": "string",
          "required": true,
          "inlined_as_list": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "read_counts",
          "description": "the read counts associated with the haplotypes, needs to be same length as haplotype_ids",
          "multivalued": true,
          "range": "double",
          "required": true,
          "inlined_as_list": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "umi_counts",
          "description": "the unique molecular identifier (umi) counts associated with the haplotypes, needs to be same length as haplotype_ids",
          "multivalued": true,
          "range": "double",
          "inlined_as_list": true,
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/HaplotypesForTarget",
      "@type": "ClassDefinition"
    },
    {
      "name": "BioMethod",
      "definition_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/BioMethod",
      "description": "methodology description of a portion of a bioinformatics pipeline",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slots": [
        "bioMethod__program",
        "bioMethod__purpose",
        "bioMethod__additional_argument"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "program",
          "description": "name of the program used for this portion of the pipeline",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9 ]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "purpose",
          "description": "the propose for this method",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9 ]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "additional_argument",
          "description": "any additional arguments that differ from the default",
          "multivalued": true,
          "range": "string",
          "inlined_as_list": true,
          "pattern": "^[A-z-._0-9 ]$",
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/BioMethod",
      "@type": "ClassDefinition"
    },
    {
      "name": "TarAmpBioinformaticsInfo",
      "definition_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/TarAmpBioinformaticsInfo",
      "description": "the targeted amplicon bioinformatics pipeline",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slots": [
        "tarAmpBioinformaticsInfo__tar_amp_bioinformatics_info_id",
        "tarAmpBioinformaticsInfo__demultiplexing_method",
        "tarAmpBioinformaticsInfo__denoising_method",
        "tarAmpBioinformaticsInfo__population_clustering_method",
        "tarAmpBioinformaticsInfo__additional_methods"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "tar_amp_bioinformatics_info_id",
          "description": "a unique identifier for this bioinformatics info",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9 ]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "demultiplexing_method",
          "description": "the demultiplexing method used to separate raw reads from barcodes and primer targets",
          "range": "BioMethod",
          "required": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "denoising_method",
          "description": "the method used to de-noise and/or cluster the raw reads",
          "range": "BioMethod",
          "required": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "population_clustering_method",
          "description": "the method used to compare clustered/de-noised reads across samples for a target",
          "range": "BioMethod",
          "required": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "additional_methods",
          "description": "any additional methods used to analyze the data",
          "multivalued": true,
          "range": "BioMethod",
          "inlined_as_list": true,
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/TarAmpBioinformaticsInfo",
      "@type": "ClassDefinition"
    },
    {
      "name": "SequencingInfo",
      "definition_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/SequencingInfo",
      "description": "Information on sequencing info",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slots": [
        "sequencingInfo__sequencing_info_id",
        "sequencingInfo__seq_instrument",
        "sequencingInfo__seq_date",
        "sequencingInfo__nucl_acid_ext",
        "sequencingInfo__nucl_acid_amp",
        "sequencingInfo__nucl_acid_date",
        "sequencingInfo__pcr_cond",
        "sequencingInfo__lib_screen",
        "sequencingInfo__lib_layout",
        "sequencingInfo__lib_kit",
        "sequencingInfo__seq_center"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "sequencing_info_id",
          "description": "a unique identifier for this sequencing info",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9 ]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "seq_instrument",
          "description": "the sequencing instrument used to sequence the run, e.g. ILLUMINA, Illumina MiSeq",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9 ]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "seq_date",
          "description": "the date of sequencing, should be YYYY-MM or YYYY-MM-DD",
          "range": "string",
          "required": true,
          "pattern": "r\"\\d{4}-(?:0[1-9]|1[0-2])(?:-(?:0[1-9]|[12][0-9]|3[01]))?\"",
          "@type": "SlotDefinition"
        },
        {
          "name": "nucl_acid_ext",
          "description": "Link to a reference or kit that describes the recovery of nucleic acids from the sample",
          "range": "string",
          "required": true,
          "pattern": "r\"^(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*$\"",
          "@type": "SlotDefinition"
        },
        {
          "name": "nucl_acid_amp",
          "description": "Link to a reference or kit that describes the enzymatic amplification of nucleic acids,",
          "range": "string",
          "required": true,
          "pattern": "r\"^(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*$\"",
          "@type": "SlotDefinition"
        },
        {
          "name": "nucl_acid_date",
          "description": "the date of the extraction/amplification",
          "range": "string",
          "required": true,
          "pattern": "r\"\\d{4}-(?:0[1-9]|1[0-2])(?:-(?:0[1-9]|[12][0-9]|3[01]))?\"",
          "@type": "SlotDefinition"
        },
        {
          "name": "pcr_cond",
          "description": "the method/conditions for PCR, List PCR cycles used to amplify the target",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9 ]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "lib_screen",
          "description": "Describe enrichment, screening, or normalization methods applied during amplification or library preparation, e.g. size selection 390bp, diluted to 1 ng DNA/sample",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9 ]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "lib_layout",
          "description": "Specify the configuration of reads, e.g. paired-end",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9 ]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "lib_kit",
          "description": "Name, version, and applicable cell or cycle numbers for the kit used to prepare libraries and load cells or chips for sequencing. If possible, include a part number, e.g. MiSeq Reagent Kit v3 (150-cycle), MS-102-3001",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9 ]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "seq_center",
          "description": "Name of facility where sequencing was performed (lab, core facility, or company)",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9 ]$",
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/SequencingInfo",
      "@type": "ClassDefinition"
    },
    {
      "name": "SpecimenInfo",
      "definition_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/SpecimenInfo",
      "description": "Information on specimen info",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slots": [
        "specimenInfo__sample_name",
        "specimenInfo__samp_taxon_id",
        "specimenInfo__host_taxon_id",
        "specimenInfo__alternate_identifiers",
        "specimenInfo__parasite_density",
        "specimenInfo__collection_date",
        "specimenInfo__lat_lon",
        "specimenInfo__collector",
        "specimenInfo__samp_store_loc",
        "specimenInfo__samp_collect_device",
        "specimenInfo__project_name",
        "specimenInfo__accession",
        "specimenInfo__sample_comments"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "sample_name",
          "description": "Collector\u2019s project-specific sample name, which must be unique for each sample that you are submitting",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9 ]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "samp_taxon_id",
          "description": "the NCBI taxonomy number of the organism of interest",
          "range": "integer",
          "required": true,
          "pattern": "^[0-9]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "host_taxon_id",
          "description": "optional the NCBI taxonomy number of the host of the organism",
          "range": "integer",
          "pattern": "^[0-9]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "alternate_identifiers",
          "description": "a list of optional alternative names for the samples",
          "multivalued": true,
          "range": "string",
          "inlined_as_list": true,
          "pattern": "^[A-z-._0-9 ]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "parasite_density",
          "description": "the parasite density in microliters",
          "range": "integer",
          "pattern": "r'^[-+]?\\d*\\.?\\d+(?:[eE][-+]?\\d+)?$'",
          "@type": "SlotDefinition"
        },
        {
          "name": "collection_date",
          "description": "the date of the sample collection",
          "range": "string",
          "required": true,
          "pattern": "r\"\\d{4}-(?:0[1-9]|1[0-2])(?:-(?:0[1-9]|[12][0-9]|3[01]))?\"",
          "@type": "SlotDefinition"
        },
        {
          "name": "lat_lon",
          "description": "the latitude and longitude of the collection site of the specimen",
          "range": "string",
          "required": true,
          "pattern": "r'^[-+]?\\d{1,2}(?:\\.\\d+)?,[-+]?\\d{1,3}(?:\\.\\d+)?$'",
          "@type": "SlotDefinition"
        },
        {
          "name": "collector",
          "description": "the name of the primary person managing the specimen",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9 ]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "samp_store_loc",
          "description": "the sample store site, address or facility name",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9 ]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "samp_collect_device",
          "description": "the way the sample was collected, e.g. whole blood, dried blood spot, etc",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9 ]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "project_name",
          "description": "a name of the project under which the sample is organized",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9 ]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "accession",
          "description": "ERA/SRA accession number for the sample if it was submitted",
          "range": "string",
          "pattern": "^[A-z-._0-9]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "sample_comments",
          "description": "any additional comments about the sample  ",
          "range": "string",
          "pattern": "^[A-z-._0-9 ]$",
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/SpecimenInfo",
      "@type": "ClassDefinition"
    },
    {
      "name": "PlasmoTarAmpResults",
      "definition_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/PlasmoTarAmpResults",
      "description": "Information on final results from a targeted amplicon analysis",
      "from_schema": "https://plasmogenepi.github.io/plasmo-tar-amp-schema",
      "slots": [
        "plasmoTarAmpResults__specimen_infos",
        "plasmoTarAmpResults__sequencing_info",
        "plasmoTarAmpResults__bioinformatics_info",
        "plasmoTarAmpResults__panel_info",
        "plasmoTarAmpResults__representative_haplotype_sequences",
        "plasmoTarAmpResults__haplotypes_detected"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "specimen_infos",
          "description": "a list of SpecimenInfo of all the samples within this project",
          "multivalued": true,
          "range": "SpecimenInfo",
          "required": true,
          "inlined_as_list": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "sequencing_info",
          "description": "the sequencing info for this project",
          "range": "SequencingInfo",
          "required": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "bioinformatics_info",
          "description": "the bioinformatics pipeline info for this project",
          "range": "TarAmpBioinformaticsInfo",
          "required": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "panel_info",
          "description": "the info on the panel used for this project",
          "range": "PanelInfo",
          "required": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "representative_haplotype_sequences",
          "description": "a list of the representative sequences for the results for this project",
          "multivalued": true,
          "range": "RepresentativeHaplotypeSequences",
          "required": true,
          "inlined_as_list": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "haplotypes_detected",
          "description": "the haplotypes detected in this projects ",
          "range": "HaplotypesDetected",
          "required": true,
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/PlasmoTarAmpResults",
      "@type": "ClassDefinition"
    }
  ],
  "metamodel_version": "1.7.0",
  "source_file": "plasmo_tar_amp_schema.yaml",
  "source_file_date": "2023-08-09T20:07:29",
  "source_file_size": 19318,
  "generation_date": "2023-08-09T21:23:51",
  "@type": "SchemaDefinition",
  "@context": [
    "project/jsonld/plasmo_tar_amp_schema.context.jsonld",
    "https://w3id.org/linkml/types.context.jsonld",
    {
      "@base": "https://plasmogenepi.github.io/plasmo-tar-amp-schema/"
    }
  ]
}
